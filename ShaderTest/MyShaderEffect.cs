//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Windows;
using System.Windows.Media;
using System.Windows.Media.Effects;
using System.Windows.Media.Media3D;


namespace ShaderTest
{

    public class MyShaderEffect : ShaderEffect
    {
        public static readonly DependencyProperty InputProperty = ShaderEffect.RegisterPixelShaderSamplerProperty("Input", typeof(MyShaderEffect), 0);
        public static readonly DependencyProperty TimeProperty = DependencyProperty.Register("Time", typeof(double), typeof(MyShaderEffect), new UIPropertyMetadata(((double)(0.5D)), PixelShaderConstantCallback(1)));
        public static readonly DependencyProperty ScaleProperty = DependencyProperty.Register("Scale", typeof(Point), typeof(MyShaderEffect), new UIPropertyMetadata(new Point(0.5D, 0.5D), PixelShaderConstantCallback(2)));
        public static readonly DependencyProperty PowerProperty = DependencyProperty.Register("Power", typeof(double), typeof(MyShaderEffect), new UIPropertyMetadata(((double)(3D)), PixelShaderConstantCallback(3)));
        public MyShaderEffect()
        {
            PixelShader pixelShader = new PixelShader();

            // 格式是/{程序集};component/{文件名}
            pixelShader.UriSource = new Uri("/ShaderTest;component/effect.ps", UriKind.Relative);
            this.PixelShader = pixelShader;

            this.UpdateShaderValue(InputProperty);
            this.UpdateShaderValue(TimeProperty);
            this.UpdateShaderValue(ScaleProperty);
            this.UpdateShaderValue(PowerProperty);
        }
        public Brush Input
        {
            get
            {
                return ((Brush)(this.GetValue(InputProperty)));
            }
            set
            {
                this.SetValue(InputProperty, value);
            }
        }

        /// <summary>Time</summary>
        public double Time
        {
            get
            {
                return ((double)(this.GetValue(TimeProperty)));
            }
            set
            {
                this.SetValue(TimeProperty, value);
            }
        }

        /// <summary>Time</summary>
        public Point Scale
        {
            get
            {
                return ((Point)(this.GetValue(ScaleProperty)));
            }
            set
            {
                this.SetValue(ScaleProperty, value);
            }
        }

        /// <summary>Time</summary>
        public double Power
        {
            get
            {
                return ((double)(this.GetValue(PowerProperty)));
            }
            set
            {
                this.SetValue(PowerProperty, value);
            }
        }
    }
}
